"use strict";function createLocalStorage(e,t){return localStorage.getItem(e)?t=JSON.parse(localStorage.getItem(e)):localStorage.setItem(e,JSON.stringify(t)),t}function setData(e,t){var a=JSON.stringify(e);localStorage.setItem(t,a)}function getData(e,t){var a=JSON.stringify(e);localStorage.getItem(t,a)}function updateStorageData(){setData(humansArr,"human storage"),setData(companiesArr,"company storage"),setData(autoArr,"auto storage"),getData(humansArr,"human storage"),getData(companiesArr,"company storage"),getData(autoArr,"auto storage")}function createShowButtons(){document.querySelector(".wrapper").innerHTML+='\n    <div class="buttons-box">\n        <button type="button" class="btn btn-outline-danger human">Human</button>\n        <button type="button" class="btn btn-outline-warning company">Company</button>\n        <button type="button" class="btn btn-outline-success auto">Auto</button>\n    </div>\n    '}function createTable(e){document.querySelector(".caption").innerHTML+='<div class="caption-name">\n        <span>'.concat(e,'</span>\n    </div>\n    <div class="caption-action">\n        <span>Actions</span>\n    </div>')}function createBaseTable(){document.querySelector(".wrapper").innerHTML+='<div class="info-block">\n        <div class="caption"></div>\n        <div class="data"></div>\n    </div>'}function setInfoToTable(e,t){for(var a=document.querySelector(".data"),n=0;n<e.length;n++)a.innerHTML+='<div data-category="'.concat(e[n].id,'">\n            ').concat(createActionButton(e[n].id,t).outerHTML,"\n        </div>");return a}function setDataToTable(e){for(var t=0;t<e.length;t++)setValue(e[t].id,e[t].name)}function setAutoDataToTable(){for(var e=0;e<autoArr.length;e++)setValue(autoArr[e].id,autoArr[e].mark)}function setValue(e,t){var a=document.querySelector('div[data-category="'.concat(e,'"]'));null!==a&&a.insertAdjacentHTML("afterbegin","<div>".concat(t,"</div>"))}function createActionButton(e,t){var a=document.createElement("div");return a.classList.add("action-box"),a.innerHTML='<button type="button" data-category="'.concat(e,'" class="btn btn-success view ').concat(t,'">View</button>\n    <button type="button" data-category="').concat(e,'" class="btn btn-warning edit ').concat(t,'">Edit</button>\n    <button type="button" data-category="').concat(e,'" class="btn btn-danger delete ').concat(t,'">Delete</button>'),a}function createForm(e){var t=document.createElement("form");return t.setAttribute("name",e),t.classList.add("form-control"),t}function createButton(e,t,a){var n=document.createElement("button");return n.classList.add(t),e.appendChild(n),n.innerHTML+=a,n}function createInputs(e,t,a,n,r){var o=document.createElement("label");o.setAttribute("for",n),o.innerHTML=e;var c=document.createElement("input");return c.setAttribute("type",t),c.setAttribute("name",a),c.setAttribute("id",n),c.setAttribute("value",r),o.appendChild(c),o.insertAdjacentHTML("beforeend",'<div class="hidden error" id="'.concat(a,'-error">').concat(a," is not correct</div>")),o}function createDeleteBlock(e){document.querySelector(".action-block").innerHTML="\n    <div class=\"delete-popup\">\n        <p class = 'list-items'>Are you sure?</p>\n        <button class = '".concat(e," cancel btn btn-success'>Cancel</button>\n        <button class = '").concat(e," confirm btn btn-danger'>Delete</button>\n    </div>\n    ")}function addDeleteDataListener(t){var a=document.querySelector(".delete-popup");a.addEventListener("click",function(e){a.innerHTML="",e.target.classList.contains("cancel")||(e.target.classList.contains("confirm")&&e.target.classList.contains("human")?deleteData(humansArr,t):e.target.classList.contains("confirm")&&e.target.classList.contains("company")?deleteData(companiesArr,t):e.target.classList.contains("confirm")&&e.target.classList.contains("auto")&&deleteData(autoArr,t),updateStorageData())})}function deleteData(e,t){for(var a=0;a<e.length;a++)if(t===parseInt(e[a].id)){var n=document.querySelector(".data"),r=document.querySelector('[data-category="'.concat(t,'"]'));n.removeChild(r),e.splice(a,1);break}}function createButtonAddUser(e){var t=document.querySelector(".info-block"),a=document.createElement("button");return a.classList.add("add-btn","btn-warning","btn",e),t.querySelector(".add-btn")&&t.removeChild(t.childNodes[0]),t.insertAdjacentElement("afterbegin",a),a.innerHTML+="Add user",a}function createCloseButton(e){document.querySelector(e).innerHTML+='\n    <button type="button" class="close" aria-label="Close">\n        <span aria-hidden="true">&times;</span>\n    </button>',addCloseListener()}function getId(e,t){var a=e.getAttribute(t);return(a=a||e.parentNode.getAttribute(t))?a:null}function chooseClikedButton(e,t,a,n,r,o){document.querySelector(".caption").firstChild&&(document.querySelector(".caption").innerHTML="",document.querySelector(".data").innerHTML=""),e(t),a(n,r),o(n)}function addListenerToInfoButton(){document.querySelector(".buttons-box").addEventListener("click",function(e){e.target.classList.contains("human")&&(chooseClikedButton(createTable,"Person Name",setInfoToTable,humansArr,"human",setDataToTable),createButtonAddUser("human"),addAddUserListeners(humansArr)),e.target.classList.contains("company")&&(chooseClikedButton(createTable,"Company Name",setInfoToTable,companiesArr,"company",setDataToTable),createButtonAddUser("company"),addAddUserListeners(companiesArr)),e.target.classList.contains("auto")&&(chooseClikedButton(createTable,"Car Mark",setInfoToTable,autoArr,"auto",setAutoDataToTable),createButtonAddUser("auto"),addAddUserListeners(autoArr))}),addListenerToActions()}function addListenerToActions(){var e=document.querySelector(".data"),t=document.querySelector(".wrapper"),b=document.createElement("div");b.classList.add("action-block"),t.appendChild(b),e.addEventListener("click",function(e){var t=parseInt(getId(e.target,"data-category")),a=document.querySelector(".action-block");if(a.classList.contains("hidden")&&a.classList.remove("hidden"),e.target.classList.contains("view")&&e.target.classList.contains("human")){for(var n in b.innerHTML="",humansArr)t===parseInt(humansArr[n].id)&&(b.innerHTML+="<p>Name: ".concat(humansArr[n].name,"</p>\n                    <p>Card Balance: ").concat(humansArr[n].balance,"</p>\n                    <p>Phone number: ").concat(humansArr[n].tel,"</p>"),humansArr[n].car?b.innerHTML+="<p>Property: ".concat(humansArr[n].car,"</p>"):b.innerHTML+="<p>There is no property </p>",createBurgainButtons(t));createCloseButton(".action-block")}if(e.target.classList.contains("view")&&e.target.classList.contains("company")){for(var r in b.innerHTML="",companiesArr)t===parseInt(companiesArr[r].id)&&(b.innerHTML+="<p>Name: ".concat(companiesArr[r].name,"</p>\n                    <p>Card Balance: ").concat(companiesArr[r].balance,"</p>\n                    <p>Phone number: ").concat(companiesArr[r].tel,"</p>\n                    <p>People amount: ").concat(companiesArr[r].workersAmount,"</p>"),companiesArr[r].car?b.innerHTML+="<p>Property: ".concat(companiesArr[r].car,"</p>"):b.innerHTML+="<p>There is no property </p>",createBurgainButtons(t));createCloseButton(".action-block")}if(e.target.classList.contains("view")&&e.target.classList.contains("auto")){for(var o in b.innerHTML="",autoArr)t===parseInt(autoArr[o].id)&&(b.innerHTML+="<p>Mark: ".concat(autoArr[o].mark,"</p>\n                    <p>Year: ").concat(autoArr[o].year,"</p>\n                    <p>Price: ").concat(autoArr[o].price,"</p>"));createCloseButton(".action-block")}if(e.target.classList.contains("edit")&&e.target.classList.contains("human")){b.innerHTML="";var c=createForm("editForm");for(var i in createCloseButton(".action-block"),humansArr){t===parseInt(humansArr[i].id)&&(c.appendChild(createInputs("Name: ","text","name","name-field",humansArr[i].name)),c.appendChild(createInputs("Balance: ","text","balance","balance-field",humansArr[i].balance)),c.appendChild(createInputs("Tel: ","text","tel","tel-field",humansArr[i].tel)),c.appendChild(createButton(c,"confirm-button","Confirm")).classList.add("btn","btn-success","human-btn"))}b.appendChild(c),addEditListeners(t)}if(e.target.classList.contains("edit")&&e.target.classList.contains("company")){b.innerHTML="";var s=createForm("editForm");for(var d in createCloseButton(".action-block"),companiesArr){t===parseInt(companiesArr[d].id)&&(s.appendChild(createInputs("name: ","text","name","name-field",companiesArr[d].name)),s.appendChild(createInputs("Balance: ","text","balance","balance-field",companiesArr[d].balance)),s.appendChild(createInputs("Tel: ","text","tel","tel-field",companiesArr[d].tel)),s.appendChild(createInputs("People amount: ","text","workersAmount","workersAmount-field",companiesArr[d].workersAmount)),s.appendChild(createButton(s,"confirm-button","Confirm")).classList.add("btn","btn-success","company-btn"))}b.appendChild(s),addEditListeners(t)}if(e.target.classList.contains("edit")&&e.target.classList.contains("auto")){b.innerHTML="";var l=createForm("editForm");for(var u in createCloseButton(".action-block"),autoArr){t===parseInt(autoArr[u].id)&&(l.appendChild(createInputs("Mark: ","text","mark","mark-field",autoArr[u].mark)),l.appendChild(createInputs("Year: ","text","year","year-field",autoArr[u].year)),l.appendChild(createInputs("Price: ","text","price","price-field",autoArr[u].price)),l.appendChild(createButton(l,"confirm-button","Confirm")).classList.add("btn","btn-success","auto-btn"))}b.appendChild(l),addEditListeners(t)}if(e.target.classList.contains("delete")&&e.target.classList.contains("human"))for(var p in b.innerHTML="",humansArr)t===parseInt(humansArr[p].id)&&(createDeleteBlock("human"),addDeleteDataListener(t));if(e.target.classList.contains("delete")&&e.target.classList.contains("company"))for(var m in b.innerHTML="",companiesArr)t===parseInt(companiesArr[m].id)&&(createDeleteBlock("company"),addDeleteDataListener(t));if(e.target.classList.contains("delete")&&e.target.classList.contains("auto"))for(var h in b.innerHTML="",autoArr)t===parseInt(autoArr[h].id)&&(createDeleteBlock("auto"),addDeleteDataListener(t))})}function createSelectInput(){var e=document.createElement("div");e.classList.add("select"),e.innerHTML+="Choose car";var t=document.createElement("select");t.setAttribute("name","car"),t.innerHTML="";for(var a=0;a<autoArr.length;a++)t.innerHTML+="<option>".concat(autoArr[a].mark,"</option>");return e.appendChild(t),e.innerHTML+='<div class="hidden error" id="car-error">car is not correct</div>',e}function addEditListeners(i){document.querySelector(".confirm-button").addEventListener("click",function(e){for(var t=document.querySelector("form"),a={},n=0,r=Object.values(t);n<r.length;n++){var o,c=r[n];c.name&&((o=isValid(c.value,c.name))?"id"===c.name?findID(c.name,c.value,a,t):a[c.name]=c.value:(event.preventDefault(),delete a[c.name]),validate(o,c.name))}return editElement(e,a,i),a})}function findID(e,t,a,n){for(var r=0;r<humansArr.length;r++){if(humansArr[r].id===parseInt(t)){event.preventDefault(),delete a[e];var o=document.createElement("p");return o.classList.add("wrongID"),o.remove(),n.querySelector(".wrongID")&&n.removeChild(n.childNodes[0]),o.innerHTML+="This ID has already used",void n.insertAdjacentElement("afterbegin",o)}n.querySelector(".wrongID")&&n.removeChild(n.childNodes[0]),a[e]=t}for(var c=0;c<companiesArr.length;c++){if(companiesArr[c].id===parseInt(t)){event.preventDefault(),delete a[e];var i=document.createElement("p");return i.classList.add("wrongID"),i.remove(),n.querySelector(".wrongID")&&n.removeChild(n.childNodes[0]),i.innerHTML+="This ID has already used",void n.insertAdjacentElement("afterbegin",i)}n.querySelector(".wrongID")&&n.removeChild(n.childNodes[0]),a[e]=t}for(var s=0;s<autoArr.length;s++){if(autoArr[s].id===parseInt(t)){event.preventDefault(),delete a[e];var d=document.createElement("p");return d.classList.add("wrongID"),d.remove(),n.querySelector(".wrongID")&&n.removeChild(n.childNodes[0]),d.innerHTML+="This ID has already used",void n.insertAdjacentElement("afterbegin",d)}n.querySelector(".wrongID")&&n.removeChild(n.childNodes[0]),a[e]=t}}function editElement(e,t,a){if(Object.keys(t).includes("key"))event.preventDefault();else if(e.target.classList.contains("human-btn")){for(var n,r=0;r<humansArr.length;r++){a===humansArr[r].id&&(n=humansArr[r].id,humansArr[r]=t,humansArr[r].id=n)}updateStorageData()}else if(e.target.classList.contains("company-btn")){for(var o,c=0;c<companiesArr.length;c++){a===companiesArr[c].id&&(o=companiesArr[c].id,companiesArr[c]=t,companiesArr[c].id=o)}updateStorageData()}else if(e.target.classList.contains("auto-btn")){for(var i,s=0;s<autoArr.length;s++){a===autoArr[s].id&&(i=autoArr[s].id,autoArr[s]=t,autoArr[s].id=i)}updateStorageData()}}function addAddUserListeners(){var e=document.querySelector(".add-btn"),a=document.querySelector(".action-block");e.addEventListener("click",function(e){a.innerHTML="",a.classList.remove("hidden");var t=createForm("addForm");e.target.classList.contains("human")?(t.appendChild(createInputs("ID: ","text","id","id-field","")),t.appendChild(createInputs("Name: ","text","name","name-field","")),t.appendChild(createInputs("Balance: ","text","balance","balance-field","")),t.appendChild(createInputs("Tel: ","text","tel","tel-field","")),t.appendChild(createSelectInput()),t.appendChild(createButton(t,"save-button","Save")).classList.add("btn","btn-success","human")):e.target.classList.contains("company")?(t.appendChild(createInputs("ID: ","text","id","id-field","")),t.appendChild(createInputs("name: ","text","name","name-field","")),t.appendChild(createInputs("Balance: ","text","balance","balance-field","")),t.appendChild(createInputs("Tel: ","text","tel","tel-field","")),t.appendChild(createInputs("Workers amount: ","text","workersAmount","workersAmount-field","")),t.appendChild(createSelectInput()),t.appendChild(createButton(t,"save-button","Save")).classList.add("btn","btn-success","company")):e.target.classList.contains("auto")&&(t.appendChild(createInputs("ID: ","text","id","id-field","")),t.appendChild(createInputs("Mark: ","text","mark","mark-field","")),t.appendChild(createInputs("Year: ","text","year","year-field","")),t.appendChild(createInputs("Price: ","text","price","price-field","")),t.appendChild(createButton(t,"save-button","Save")).classList.add("btn","btn-success","auto")),a.appendChild(t),createCloseButton(".action-block"),addSaveListeners()})}function addCloseListener(){document.querySelector(".close").addEventListener("click",function(){document.querySelector(".action-block").classList.add("hidden"),document.querySelector(".aware")&&document.querySelector(".aware").classList.add("hidden")})}function addSaveListeners(){var e=document.querySelector(".save-button"),s={};return e.addEventListener("click",function(e){for(var t=document.querySelector("form"),a=0,n=Object.values(t);a<n.length;a++){var r=n[a];if(r.name){var o=isValid(r.value,r.name);if(o)if("id"===r.name)findID(r.name,r.value,s,t);else if("car"===r.name)for(var c,i=0;i<autoArr.length;i++){autoArr[i].mark===r.value&&(autoArr[i].price<=parseInt(s.balance)?(t.querySelector(".wrongCar")&&t.removeChild(t.childNodes[0]),s[r.name]=r.value,s.balance=s.balance-autoArr[i].price):(event.preventDefault(),delete s[r.name],(c=document.createElement("p")).classList.add("wrongCar"),c.remove(),t.querySelector(".wrongCar")&&t.removeChild(t.childNodes[0]),c.innerHTML+="You have not money for purchase",t.insertAdjacentElement("afterbegin",c)))}else s[r.name]=r.value;else event.preventDefault(),delete s[r.name];validate(o,r.name)}}e.target.classList.contains("human")&&5===t.querySelectorAll(".hidden").length&&!t.querySelector("p")?(humansArr.push(s),updateStorageData()):e.target.classList.contains("company")&&6===t.querySelectorAll(".hidden").length&&!t.querySelector("p")?(companiesArr.push(s),updateStorageData()):e.target.classList.contains("auto")&&4===t.querySelectorAll(".hidden").length&&!t.querySelector("p")&&(autoArr.push(s),updateStorageData())}),s}function validate(e,t){e?document.getElementById(t+"-error").classList.add("hidden"):document.getElementById(t+"-error").classList.remove("hidden")}function isValid(e,t){return setPatterns()[t].test(e)}function setPatterns(){return{id:/^[0-9]{1,}$/g,name:/^[A-Z][a-z]{1,20}$/g,owner:/^[A-Z][a-z]{1,20}$/g,mark:/^[A-Z][a-z]{1,20}\s?[A-Z]?[a-z]{1,20}?$/g,year:/^[0-9]{4}$/g,workersAmount:/^[0-9]{1,}$/,balance:/^[0-9]{1,}$/g,tel:/^\+?38\s[0-9]{3}\s[0-9]{3}\s[0-9]{2}\s[0-9]{2}$/g,price:/^[0-9]{1,}$/g,car:/^[A-Z][a-z]{1,20}$/g}}function createBurgainButtons(e){var t=document.createElement("div"),a=document.querySelector(".action-block");t.classList.add("burgain-buttons"),t.innerHTML+='\n    <button class="buy-button btn btn-outline-danger">Buy car</button>\n    <button class="sold-button btn btn-outline-success">Sold car</button>\n    ',a.appendChild(t),addBurgainListener(e)}function addBurgainListener(o){var c=document.querySelector(".action-block");c.addEventListener("click",function(e){if(e.target.classList.contains("buy-button")&&(chechProperty(humansArr,o,c),chechProperty(companiesArr,o,c),event.stopImmediatePropagation()),e.target.classList.contains("sold-button")){for(var t in humansArr){var a;o===parseInt(humansArr[t].id)&&(humansArr[t].car?(createDeleteBlock(),addListenerForSoldCar(o,humansArr)):(a=document.createElement("div"),clearAwareBlock(".aware"),a.classList.add("aware"),a.innerHTML+="You don`t have any cars",document.querySelector(".burgain-buttons").classList.add("hidden"),c.appendChild(a)))}for(var n in companiesArr){var r;o===parseInt(companiesArr[n].id)&&(companiesArr[n].car?(createDeleteBlock(),addListenerForSoldCar(o,companiesArr)):(r=document.createElement("div"),clearAwareBlock(".aware"),r.classList.add("aware"),r.innerHTML+="You don`t have any cars",document.querySelector(".burgain-buttons").classList.add("hidden"),c.appendChild(r)))}}})}function chechProperty(e,t,a){for(var n in e){var r;t===parseInt(e[n].id)&&(e[n].car?(r=document.createElement("div"),clearAwareBlock(".aware"),clearAwareBlock(".select"),r.classList.add("aware"),r.innerHTML+="You have car",document.querySelector(".burgain-buttons").classList.add("hidden"),a.appendChild(r)):(clearAwareBlock(".aware"),clearAwareBlock(".select"),a.appendChild(createSelectInput()),a.appendChild(createBuyButton()),addBuyListener(t,e),document.querySelector(".burgain-buttons").classList.add("hidden")))}}function addListenerForSoldCar(r,o){var c=document.querySelector(".delete-popup");c.addEventListener("click",function(e){if(e.target.classList.contains("cancel"))c.classList.add("hidden");else if(e.target.classList.contains("confirm"))for(var t in o){var a,n;r===parseInt(o[t].id)&&((a=document.createElement("div")).innerHTML+="<p>There is no more property </p>",n=findCurrentCar(o[t].car),o[t].balance=o[t].balance+n,delete o[t].car,c.classList.add("hidden"),document.querySelector(".action-block").appendChild(a),updateStorageData())}})}function findCurrentCar(e){for(var t in autoArr)if(e===autoArr[t].mark)return autoArr[t].price}function clearAwareBlock(e){var t=document.querySelector(".action-block");document.querySelector(e)&&t.lastChild.remove()}function createBuyButton(){var e=document.createElement("button");return e.classList.add("select-and-buy","btn","btn-success"),e.innerText="Buy",e}function addBuyListener(o,c){var e=document.querySelector(".select-and-buy"),i=document.querySelector(".action-block");e.addEventListener("click",function(){var e=document.querySelector("select").options.selectedIndex,t=document.querySelector("select").options[e].text;for(var a in c)if(o===parseInt(c[a].id))for(var n,r=0;r<autoArr.length;r++){t===autoArr[r].mark&&(autoArr[r].price<=parseInt(c[a].balance)?(document.querySelector(".wrongCar")&&i.removeChild(i.childNodes[0]),c[a].car=t,c[a].balance=c[a].balance-autoArr[r].price,updateStorageData(),location.reload()):((n=document.createElement("p")).classList.add("wrongCar"),n.remove(),document.querySelector(".wrongCar")&&i.removeChild(i.childNodes[0]),n.innerHTML+="You have not money for purchase",i.insertAdjacentElement("afterbegin",n)))}})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
